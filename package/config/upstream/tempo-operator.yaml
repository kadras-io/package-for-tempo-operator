apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
    control-plane: controller-manager
  name: tempo-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
  name: tempomonolithics.tempo.grafana.com
spec:
  group: tempo.grafana.com
  names:
    kind: TempoMonolithic
    listKind: TempoMonolithicList
    plural: tempomonolithics
    singular: tempomonolithic
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Tempo Version
      jsonPath: .status.tempoVersion
      name: Tempo Version
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TempoMonolithic manages a Tempo deployment in monolithic mode.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TempoMonolithicSpec defines the desired state of TempoMonolithic.
            properties:
              affinity:
                description: Affinity defines the Affinity rules for scheduling pods.
                properties:
                  nodeAffinity:
                    description: Describes node affinity scheduling rules for the
                      pod.
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node matches the corresponding matchExpressions; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: |-
                            An empty preferred scheduling term matches all objects with implicit weight 0
                            (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                          properties:
                            preference:
                              description: A node selector term, associated with the
                                corresponding weight.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            weight:
                              description: Weight associated with matching the corresponding
                                nodeSelectorTerm, in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - preference
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to an update), the system
                          may or may not try to eventually evict the pod from its node.
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms.
                              The terms are ORed.
                            items:
                              description: |-
                                A null or empty node selector term matches no objects. The requirements of
                                them are ANDed.
                                The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements
                                    by node's labels.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchFields:
                                  description: A list of node selector requirements
                                    by node's fields.
                                  items:
                                    description: |-
                                      A node selector requirement is a selector that contains values, a key, and an operator
                                      that relates the key and values.
                                    properties:
                                      key:
                                        description: The label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          Represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                        type: string
                                      values:
                                        description: |-
                                          An array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. If the operator is Gt or Lt, the values
                                          array must have a single element, which will be interpreted as an integer.
                                          This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        required:
                        - nodeSelectorTerms
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  podAffinity:
                    description: Describes pod affinity scheduling rules (e.g. co-locate
                      this pod in the same node, zone, etc. as some other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: |-
                                    A label query over a set of resources, in this case pods.
                                    If it's null, this PodAffinityTerm matches with no Pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                    Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                mismatchLabelKeys:
                                  description: |-
                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                    Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: |-
                                weight associated with matching the corresponding podAffinityTerm,
                                in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to a pod label update), the
                          system may or may not try to eventually evict the pod from its node.
                          When there are multiple elements, the lists of nodes corresponding to each
                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                        items:
                          description: |-
                            Defines a set of pods (namely those matching the labelSelector
                            relative to the given namespace(s)) that this pod should be
                            co-located (affinity) or not co-located (anti-affinity) with,
                            where co-located is defined as running on a node whose value of
                            the label with key <topologyKey> matches that of any node on which
                            a pod of the set of pods is running
                          properties:
                            labelSelector:
                              description: |-
                                A label query over a set of resources, in this case pods.
                                If it's null, this PodAffinityTerm matches with no Pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            matchLabelKeys:
                              description: |-
                                MatchLabelKeys is a set of pod label keys to select which pods will
                                be taken into consideration. The keys are used to lookup values from the
                                incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                to select the group of existing pods which pods will be taken into consideration
                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                pod labels will be ignored. The default value is empty.
                                The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            mismatchLabelKeys:
                              description: |-
                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                be taken into consideration. The keys are used to lookup values from the
                                incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                to select the group of existing pods which pods will be taken into consideration
                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                pod labels will be ignored. The default value is empty.
                                The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            namespaceSelector:
                              description: |-
                                A label query over the set of namespaces that the term applies to.
                                The term is applied to the union of the namespaces selected by this field
                                and the ones listed in the namespaces field.
                                null selector and null or empty namespaces list means "this pod's namespace".
                                An empty selector ({}) matches all namespaces.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: |-
                                namespaces specifies a static list of namespace names that the term applies to.
                                The term is applied to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector.
                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: |-
                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                whose value of the label with key topologyKey matches that of any node on which any of the
                                selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                  podAntiAffinity:
                    description: Describes pod anti-affinity scheduling rules (e.g.
                      avoid putting this pod in the same node, zone, etc. as some
                      other pod(s)).
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          The scheduler will prefer to schedule pods to nodes that satisfy
                          the anti-affinity expressions specified by this field, but it may choose
                          a node that violates one or more of the expressions. The node that is
                          most preferred is the one with the greatest sum of weights, i.e.
                          for each node that meets all of the scheduling requirements (resource
                          request, requiredDuringScheduling anti-affinity expressions, etc.),
                          compute a sum by iterating through the elements of this field and adding
                          "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                          node(s) with the highest sum are the most preferred.
                        items:
                          description: The weights of all of the matched WeightedPodAffinityTerm
                            fields are added per-node to find the most preferred node(s)
                          properties:
                            podAffinityTerm:
                              description: Required. A pod affinity term, associated
                                with the corresponding weight.
                              properties:
                                labelSelector:
                                  description: |-
                                    A label query over a set of resources, in this case pods.
                                    If it's null, this PodAffinityTerm matches with no Pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                    Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                mismatchLabelKeys:
                                  description: |-
                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                    Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            weight:
                              description: |-
                                weight associated with matching the corresponding podAffinityTerm,
                                in the range 1-100.
                              format: int32
                              type: integer
                          required:
                          - podAffinityTerm
                          - weight
                          type: object
                        type: array
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: |-
                          If the anti-affinity requirements specified by this field are not met at
                          scheduling time, the pod will not be scheduled onto the node.
                          If the anti-affinity requirements specified by this field cease to be met
                          at some point during pod execution (e.g. due to a pod label update), the
                          system may or may not try to eventually evict the pod from its node.
                          When there are multiple elements, the lists of nodes corresponding to each
                          podAffinityTerm are intersected, i.e. all terms must be satisfied.
                        items:
                          description: |-
                            Defines a set of pods (namely those matching the labelSelector
                            relative to the given namespace(s)) that this pod should be
                            co-located (affinity) or not co-located (anti-affinity) with,
                            where co-located is defined as running on a node whose value of
                            the label with key <topologyKey> matches that of any node on which
                            a pod of the set of pods is running
                          properties:
                            labelSelector:
                              description: |-
                                A label query over a set of resources, in this case pods.
                                If it's null, this PodAffinityTerm matches with no Pods.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            matchLabelKeys:
                              description: |-
                                MatchLabelKeys is a set of pod label keys to select which pods will
                                be taken into consideration. The keys are used to lookup values from the
                                incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                to select the group of existing pods which pods will be taken into consideration
                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                pod labels will be ignored. The default value is empty.
                                The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            mismatchLabelKeys:
                              description: |-
                                MismatchLabelKeys is a set of pod label keys to select which pods will
                                be taken into consideration. The keys are used to lookup values from the
                                incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                to select the group of existing pods which pods will be taken into consideration
                                for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                pod labels will be ignored. The default value is empty.
                                The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            namespaceSelector:
                              description: |-
                                A label query over the set of namespaces that the term applies to.
                                The term is applied to the union of the namespaces selected by this field
                                and the ones listed in the namespaces field.
                                null selector and null or empty namespaces list means "this pod's namespace".
                                An empty selector ({}) matches all namespaces.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: |-
                                namespaces specifies a static list of namespace names that the term applies to.
                                The term is applied to the union of the namespaces listed in this field
                                and the ones selected by namespaceSelector.
                                null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                              items:
                                type: string
                              type: array
                            topologyKey:
                              description: |-
                                This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                whose value of the label with key topologyKey matches that of any node on which any of the
                                selected pods is running.
                                Empty topologyKey is not allowed.
                              type: string
                          required:
                          - topologyKey
                          type: object
                        type: array
                    type: object
                type: object
              extraConfig:
                description: ExtraConfig defines any extra (overlay) configuration
                  of components.
                properties:
                  tempo:
                    description: Tempo defines any extra Tempo configuration, which
                      will be merged with the operator's generated Tempo configuration
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              ingestion:
                description: Ingestion defines the trace ingestion configuration.
                properties:
                  otlp:
                    description: OTLP defines the ingestion configuration for the
                      OTLP protocol.
                    properties:
                      grpc:
                        description: GRPC defines the OTLP over gRPC configuration.
                        properties:
                          enabled:
                            default: true
                            description: |-
                              Enabled defines if OTLP over gRPC is enabled.
                              Default: enabled.
                            type: boolean
                          tls:
                            description: |-
                              TLS defines the TLS configuration for OTLP/gRPC ingestion.


                              On OpenShift when operator config `servingCertsService`  and TLS is enabled  but no `certName` and `caName`
                              are provided it will use OpenShift serving certificate service.
                            properties:
                              caName:
                                description: |-
                                  CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
                                  It needs to be in the same namespace as the Tempo custom resource.
                                type: string
                              certName:
                                description: |-
                                  Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key).
                                  It needs to be in the same namespace as the Tempo custom resource.
                                type: string
                              enabled:
                                description: Enabled defines if TLS is enabled.
                                type: boolean
                              minVersion:
                                description: MinVersion defines the minimum acceptable
                                  TLS version.
                                type: string
                            type: object
                        required:
                        - enabled
                        type: object
                      http:
                        description: HTTP defines the OTLP over HTTP configuration.
                        properties:
                          enabled:
                            default: true
                            description: |-
                              Enabled defines if OTLP over HTTP is enabled.
                              Default: enabled.
                            type: boolean
                          tls:
                            description: |-
                              TLS defines the TLS configuration for OTLP/HTTP ingestion.


                              On OpenShift when operator config `servingCertsService`  and TLS is enabled  but no `certName` and `caName`
                              are provided it will use OpenShift serving certificate service.
                            properties:
                              caName:
                                description: |-
                                  CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
                                  It needs to be in the same namespace as the Tempo custom resource.
                                type: string
                              certName:
                                description: |-
                                  Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key).
                                  It needs to be in the same namespace as the Tempo custom resource.
                                type: string
                              enabled:
                                description: Enabled defines if TLS is enabled.
                                type: boolean
                              minVersion:
                                description: MinVersion defines the minimum acceptable
                                  TLS version.
                                type: string
                            type: object
                        required:
                        - enabled
                        type: object
                    type: object
                type: object
              jaegerui:
                description: JaegerUI defines the Jaeger UI configuration.
                properties:
                  authentication:
                    description: Authentication defines the options for the oauth
                      proxy used to protect jaeger UI
                    properties:
                      enabled:
                        description: Defines if the authentication will be enabled
                          for jaeger UI.
                        type: boolean
                      resources:
                        description: |-
                          Resources defines the compute resource requirements of the OAuth Proxy container.
                          The OAuth Proxy performs authentication and authorization of incoming requests to Jaeger UI when multi-tenancy is disabled.
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.


                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.


                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      sar:
                        description: |-
                          SAR defines the SAR to be used in the oauth-proxy
                          default is "{"namespace": "<tempo_stack_namespace>", "resource": "pods", "verb": "get"}
                        type: string
                    type: object
                  enabled:
                    description: Enabled defines if the Jaeger UI component should
                      be created.
                    type: boolean
                  ingress:
                    description: Ingress defines the Ingress configuration for the
                      Jaeger UI.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations defines the annotations of the Ingress
                          object.
                        type: object
                      enabled:
                        description: Enabled defines if an Ingress object should be
                          created for Jaeger UI.
                        type: boolean
                      host:
                        description: Host defines the hostname of the Ingress object.
                        type: string
                      ingressClassName:
                        description: |-
                          IngressClassName defines the name of an IngressClass cluster resource.
                          Defines which ingress controller serves this ingress resource.
                        type: string
                    required:
                    - enabled
                    type: object
                  resources:
                    description: Resources defines the compute resource requirements
                      of the Jaeger UI container.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.


                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.


                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  route:
                    description: Route defines the OpenShift route configuration for
                      the Jaeger UI.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations defines the annotations of the Route
                          object.
                        type: object
                      enabled:
                        description: Enabled defines if a Route object should be created
                          for Jaeger UI.
                        type: boolean
                      host:
                        description: Host defines the hostname of the Route object.
                        type: string
                      termination:
                        description: Termination specifies the termination type.
                        enum:
                        - insecure
                        - edge
                        - passthrough
                        - reencrypt
                        type: string
                    required:
                    - enabled
                    type: object
                  servicesQueryDuration:
                    description: ServicesQueryDuration defines how long the services
                      will be available in the services list
                    type: string
                required:
                - enabled
                type: object
              management:
                description: |-
                  ManagementState defines whether this instance is managed by the operator or self-managed.
                  Default: Managed.
                enum:
                - Managed
                - Unmanaged
                type: string
              multitenancy:
                description: Multitenancy defines the multi-tenancy configuration.
                properties:
                  authentication:
                    description: Authentication defines the tempo-gateway component
                      authentication configuration spec per tenant.
                    items:
                      description: AuthenticationSpec defines the oidc configuration
                        per tenant for tempo Gateway component.
                      properties:
                        oidc:
                          description: OIDC defines the spec for the OIDC tenant's
                            authentication.
                          properties:
                            groupClaim:
                              description: Group claim field from ID Token
                              type: string
                            issuerURL:
                              description: IssuerURL defines the URL for issuer.
                              type: string
                            redirectURL:
                              description: RedirectURL defines the URL for redirect.
                              type: string
                            secret:
                              description: Secret defines the spec for the clientID,
                                clientSecret and issuerCAPath for tenant's authentication.
                              properties:
                                name:
                                  description: Name of a secret in the namespace configured
                                    for tenant secrets.
                                  type: string
                              type: object
                            usernameClaim:
                              description: User claim field from ID Token
                              type: string
                          type: object
                        tenantId:
                          description: |-
                            TenantID defines a universally unique identifier of the tenant.
                            Unlike the tenantName, which must be unique at a given time, the tenantId must be unique over the entire lifetime of the Tempo deployment.
                            Tempo uses this ID to prefix objects in the object storage.
                          type: string
                        tenantName:
                          description: |-
                            TenantName defines a human readable, unique name of the tenant.
                            The value of this field must be specified in the X-Scope-OrgID header and in the resources field of a ClusterRole to identify the tenant.
                          type: string
                      required:
                      - tenantId
                      - tenantName
                      type: object
                    type: array
                  authorization:
                    description: Authorization defines the tempo-gateway component
                      authorization configuration spec per tenant.
                    properties:
                      roleBindings:
                        description: RoleBindings defines configuration to bind a
                          set of roles to a set of subjects.
                        items:
                          description: RoleBindingsSpec binds a set of roles to a
                            set of subjects.
                          properties:
                            name:
                              type: string
                            roles:
                              items:
                                type: string
                              type: array
                            subjects:
                              items:
                                description: Subject represents a subject that has
                                  been bound to a role.
                                properties:
                                  kind:
                                    description: SubjectKind is a kind of Tempo Gateway
                                      RBAC subject.
                                    enum:
                                    - user
                                    - group
                                    type: string
                                  name:
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              type: array
                          required:
                          - name
                          - roles
                          - subjects
                          type: object
                        type: array
                      roles:
                        description: Roles defines a set of permissions to interact
                          with a tenant.
                        items:
                          description: RoleSpec describes a set of permissions to
                            interact with a tenant.
                          properties:
                            name:
                              type: string
                            permissions:
                              items:
                                description: PermissionType is a Tempo Gateway RBAC
                                  permission.
                                enum:
                                - read
                                - write
                                type: string
                              type: array
                            resources:
                              items:
                                type: string
                              type: array
                            tenants:
                              items:
                                type: string
                              type: array
                          required:
                          - name
                          - permissions
                          - resources
                          - tenants
                          type: object
                        type: array
                    type: object
                  enabled:
                    description: Enabled defines if multi-tenancy is enabled.
                    type: boolean
                  mode:
                    default: static
                    description: Mode defines the multitenancy mode.
                    enum:
                    - static
                    - openshift
                    type: string
                  resources:
                    description: |-
                      Resources defines the compute resource requirements of the gateway container.
                      The gateway performs authentication and authorization of incoming requests when multi-tenancy is enabled.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.


                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.


                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                required:
                - enabled
                - mode
                type: object
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector defines which labels are required by a node
                  to schedule the pod onto it.
                type: object
              observability:
                description: Observability defines the observability configuration
                  of the Tempo deployment.
                properties:
                  grafana:
                    description: Grafana defines the Grafana configuration of the
                      Tempo deployment.
                    properties:
                      dataSource:
                        description: DataSource defines the Grafana data source configuration.
                        properties:
                          enabled:
                            description: Enabled defines if a Grafana data source
                              should be created for this Tempo deployment.
                            type: boolean
                          instanceSelector:
                            description: InstanceSelector defines the Grafana instance
                              where the data source should be created.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                        required:
                        - enabled
                        type: object
                    type: object
                  metrics:
                    description: Metrics defines the metric configuration of the Tempo
                      deployment.
                    properties:
                      prometheusRules:
                        description: ServiceMonitors defines the PrometheusRule configuration.
                        properties:
                          enabled:
                            description: Enabled defines if PrometheusRule objects
                              should be created for this Tempo deployment.
                            type: boolean
                        required:
                        - enabled
                        type: object
                      serviceMonitors:
                        description: ServiceMonitors defines the ServiceMonitor configuration.
                        properties:
                          enabled:
                            description: Enabled defines if ServiceMonitor objects
                              should be created for this Tempo deployment.
                            type: boolean
                        required:
                        - enabled
                        type: object
                    type: object
                type: object
              resources:
                description: Resources defines the compute resource requirements of
                  the Tempo container.
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.


                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.


                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              serviceAccount:
                description: ServiceAccount defines the Service Account to use for
                  all Tempo components.
                type: string
              storage:
                description: Storage defines the storage configuration.
                properties:
                  traces:
                    description: Traces defines the storage configuration for traces.
                    properties:
                      azure:
                        description: Azure defines the configuration for Azure Storage.
                        properties:
                          secret:
                            description: |-
                              Secret is the name of a Secret containing credentials for accessing object storage.
                              It needs to be in the same namespace as the TempoMonolithic custom resource.
                            minLength: 1
                            type: string
                        required:
                        - secret
                        type: object
                      backend:
                        default: memory
                        description: |-
                          Backend defines the backend for storing traces.
                          Default: memory.
                        enum:
                        - memory
                        - pv
                        - azure
                        - gcs
                        - s3
                        type: string
                      gcs:
                        description: GCP defines the configuration for Google Cloud
                          Storage.
                        properties:
                          secret:
                            description: |-
                              Secret is the name of a Secret containing credentials for accessing object storage.
                              It needs to be in the same namespace as the TempoMonolithic custom resource.
                            minLength: 1
                            type: string
                        required:
                        - secret
                        type: object
                      s3:
                        description: S3 defines the configuration for Amazon S3.
                        properties:
                          secret:
                            description: |-
                              Secret is the name of a Secret containing credentials for accessing object storage.
                              It needs to be in the same namespace as the TempoMonolithic custom resource.
                            minLength: 1
                            type: string
                          tls:
                            description: TLS defines the TLS configuration for Amazon
                              S3.
                            properties:
                              caName:
                                description: |-
                                  CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
                                  It needs to be in the same namespace as the Tempo custom resource.
                                type: string
                              certName:
                                description: |-
                                  Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key).
                                  It needs to be in the same namespace as the Tempo custom resource.
                                type: string
                              enabled:
                                description: Enabled defines if TLS is enabled.
                                type: boolean
                              minVersion:
                                description: MinVersion defines the minimum acceptable
                                  TLS version.
                                type: string
                            type: object
                        required:
                        - secret
                        type: object
                      size:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          Size defines the size of the volume where traces are stored.
                          For in-memory storage, this defines the size of the tmpfs volume.
                          For persistent volume storage, this defines the size of the persistent volume.
                          For object storage, this defines the size of the persistent volume containing the Write-Ahead Log (WAL) of Tempo.
                          Default: 2Gi for memory, 10Gi for all other backends.
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    required:
                    - backend
                    type: object
                required:
                - traces
                type: object
              tolerations:
                description: Tolerations defines the tolerations of a node to schedule
                  the pod onto it.
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: TempoMonolithicStatus defines the observed state of TempoMonolithic.
            properties:
              components:
                description: Components provides summary of all Tempo pod status,
                  grouped per component.
                properties:
                  tempo:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Tempo is a map of the pod status of the Tempo pods.
                    type: object
                type: object
              conditions:
                description: Conditions of the Tempo deployment health.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              operatorVersion:
                description: Version of the Tempo Operator.
                type: string
              tempoVersion:
                description: Version of the managed Tempo instance.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
  name: tempostacks.tempo.grafana.com
spec:
  group: tempo.grafana.com
  names:
    kind: TempoStack
    listKind: TempoStackList
    plural: tempostacks
    shortNames:
    - tempo
    - tempos
    singular: tempostack
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Tempo Version
      jsonPath: .status.tempoVersion
      name: Tempo Version
      type: string
    - description: Management State
      jsonPath: .spec.managementState
      name: Management
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TempoStack manages a Tempo deployment in microservices mode.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TempoStackSpec defines the desired state of TempoStack.
            properties:
              extraConfig:
                description: |-
                  ExtraConfigSpec defines extra configurations for tempo that will be merged with the operator generated, configurations defined here
                  has precedence and could override generated config.
                properties:
                  tempo:
                    description: Tempo defines any extra Tempo configuration, which
                      will be merged with the operator's generated Tempo configuration
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              hashRing:
                description: HashRing defines the spec for the distributed hash ring
                  configuration.
                properties:
                  memberlist:
                    description: MemberList configuration spec
                    properties:
                      enableIPv6:
                        description: EnableIPv6 enables IPv6 support for the memberlist
                          based hash ring.
                        type: boolean
                    type: object
                type: object
              images:
                description: Images defines the image for each container.
                properties:
                  oauthProxy:
                    description: OauthProxy defines the oauth proxy image used to
                      protect the jaegerUI on single tenant.
                    type: string
                  tempo:
                    description: Tempo defines the tempo container image.
                    type: string
                  tempoGateway:
                    description: TempoGateway defines the tempo-gateway container
                      image.
                    type: string
                  tempoGatewayOpa:
                    description: TempoGatewayOpa defines the OPA sidecar container
                      for TempoGateway.
                    type: string
                  tempoQuery:
                    description: TempoQuery defines the tempo-query container image.
                    type: string
                type: object
              limits:
                description: LimitSpec is used to limit ingestion and querying rates.
                properties:
                  global:
                    description: Global is used to define global rate limits.
                    properties:
                      ingestion:
                        description: Ingestion is used to define ingestion rate limits.
                        properties:
                          ingestionBurstSizeBytes:
                            description: IngestionBurstSizeBytes defines the burst
                              size (bytes) used in ingestion.
                            type: integer
                          ingestionRateLimitBytes:
                            description: IngestionRateLimitBytes defines the Per-user
                              ingestion rate limit (bytes) used in ingestion.
                            type: integer
                          maxBytesPerTrace:
                            description: MaxBytesPerTrace defines the maximum number
                              of bytes of an acceptable trace.
                            type: integer
                          maxTracesPerUser:
                            description: MaxTracesPerUser defines the maximum number
                              of traces a user can send.
                            type: integer
                        type: object
                      query:
                        description: Query is used to define query rate limits.
                        properties:
                          maxBytesPerTagValues:
                            description: MaxBytesPerTagValues defines the maximum
                              size in bytes of a tag-values query.
                            type: integer
                          maxSearchBytesPerTrace:
                            description: |-
                              DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single
                              trace in bytes.
                              default: `0` to disable.
                            type: integer
                          maxSearchDuration:
                            description: |-
                              MaxSearchDuration defines the maximum allowed time range for a search.
                              If this value is not set, then spec.search.maxDuration is used.
                            type: string
                        type: object
                    type: object
                  perTenant:
                    additionalProperties:
                      description: RateLimitSpec defines rate limits for Ingestion
                        and Query components.
                      properties:
                        ingestion:
                          description: Ingestion is used to define ingestion rate
                            limits.
                          properties:
                            ingestionBurstSizeBytes:
                              description: IngestionBurstSizeBytes defines the burst
                                size (bytes) used in ingestion.
                              type: integer
                            ingestionRateLimitBytes:
                              description: IngestionRateLimitBytes defines the Per-user
                                ingestion rate limit (bytes) used in ingestion.
                              type: integer
                            maxBytesPerTrace:
                              description: MaxBytesPerTrace defines the maximum number
                                of bytes of an acceptable trace.
                              type: integer
                            maxTracesPerUser:
                              description: MaxTracesPerUser defines the maximum number
                                of traces a user can send.
                              type: integer
                          type: object
                        query:
                          description: Query is used to define query rate limits.
                          properties:
                            maxBytesPerTagValues:
                              description: MaxBytesPerTagValues defines the maximum
                                size in bytes of a tag-values query.
                              type: integer
                            maxSearchBytesPerTrace:
                              description: |-
                                DEPRECATED. MaxSearchBytesPerTrace defines the maximum size of search data for a single
                                trace in bytes.
                                default: `0` to disable.
                              type: integer
                            maxSearchDuration:
                              description: |-
                                MaxSearchDuration defines the maximum allowed time range for a search.
                                If this value is not set, then spec.search.maxDuration is used.
                              type: string
                          type: object
                      type: object
                    description: PerTenant is used to define rate limits per tenant.
                    type: object
                type: object
              managementState:
                default: Managed
                description: |-
                  ManagementState defines if the CR should be managed by the operator or not.
                  Default is managed.
                enum:
                - Managed
                - Unmanaged
                type: string
              observability:
                description: ObservabilitySpec defines how telemetry data gets handled.
                properties:
                  grafana:
                    description: Grafana defines the Grafana configuration for operands.
                    properties:
                      createDatasource:
                        description: CreateDatasource specifies if a Grafana Datasource
                          should be created for Tempo.
                        type: boolean
                      instanceSelector:
                        description: InstanceSelector specifies the Grafana instance
                          where the datasource should be created.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  metrics:
                    description: Metrics defines the metrics configuration for operands.
                    properties:
                      createPrometheusRules:
                        description: CreatePrometheusRules specifies if Prometheus
                          rules for alerts should be created for Tempo components.
                        type: boolean
                      createServiceMonitors:
                        description: CreateServiceMonitors specifies if ServiceMonitors
                          should be created for Tempo components.
                        type: boolean
                    type: object
                  tracing:
                    description: Tracing defines a config for operands.
                    properties:
                      jaeger_agent_endpoint:
                        default: localhost:6831
                        description: JaegerAgentEndpoint defines the jaeger endpoint
                          data gets send to.
                        type: string
                      sampling_fraction:
                        description: SamplingFraction defines the sampling ratio.
                          Valid values are 0 to 1.
                        type: string
                    type: object
                type: object
              replicationFactor:
                description: ReplicationFactor is used to define how many component
                  replicas should exist.
                type: integer
              resources:
                description: Resources defines resources configuration.
                properties:
                  total:
                    description: |-
                      The total amount of resources for Tempo instance.
                      The operator autonomously splits resources between deployed Tempo components.
                      Only limits are supported, the operator calculates requests automatically.
                      See http://github.com/grafana/tempo/issues/1540.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.


                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.


                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                type: object
              retention:
                description: |-
                  Retention period defined by dataset.
                  User can specify how long data should be stored.
                properties:
                  global:
                    description: Global is used to configure global retention.
                    properties:
                      traces:
                        description: |-
                          Traces defines retention period. Supported parameter suffixes are "s", "m" and "h".
                          example: 336h
                          default: value is 48h.
                        type: string
                    type: object
                  perTenant:
                    additionalProperties:
                      description: RetentionConfig defines how long data should be
                        provided.
                      properties:
                        traces:
                          description: |-
                            Traces defines retention period. Supported parameter suffixes are "s", "m" and "h".
                            example: 336h
                            default: value is 48h.
                          type: string
                      type: object
                    description: PerTenant is used to configure retention per tenant.
                    type: object
                type: object
              search:
                description: SearchSpec control the configuration for the search capabilities.
                properties:
                  defaultResultLimit:
                    description: 'Limit used for search requests if none is set by
                      the caller (default: 20)'
                    type: integer
                  maxDuration:
                    description: 'The maximum allowed time range for a search, default:
                      0s which means unlimited.'
                    type: string
                  maxResultLimit:
                    description: |-
                      The maximum allowed value of the limit parameter on search requests. If the search request limit parameter
                      exceeds the value configured here it will be set to the value configured here.
                      The default value of 0 disables this limit.
                    type: integer
                type: object
              serviceAccount:
                description: ServiceAccount defines the service account to use for
                  all tempo components.
                type: string
              storage:
                description: |-
                  Storage defines the spec for the object storage endpoint to store traces.
                  User is required to create secret and supply it.
                properties:
                  secret:
                    description: |-
                      Secret for object storage authentication.
                      Name of a secret in the same namespace as the TempoStack custom resource.
                    properties:
                      name:
                        description: Name of a secret in the namespace configured
                          for object storage secrets.
                        minLength: 1
                        type: string
                      type:
                        description: Type of object storage that should be used
                        enum:
                        - azure
                        - gcs
                        - s3
                        type: string
                    required:
                    - name
                    - type
                    type: object
                  tls:
                    description: TLS configuration for reaching the object storage
                      endpoint.
                    properties:
                      caName:
                        description: |-
                          CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
                          It needs to be in the same namespace as the Tempo custom resource.
                        type: string
                      certName:
                        description: |-
                          Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key).
                          It needs to be in the same namespace as the Tempo custom resource.
                        type: string
                      enabled:
                        description: Enabled defines if TLS is enabled.
                        type: boolean
                      minVersion:
                        description: MinVersion defines the minimum acceptable TLS
                          version.
                        type: string
                    type: object
                required:
                - secret
                type: object
              storageClassName:
                description: StorageClassName for PVCs used by ingester. Defaults
                  to nil (default storage class in the cluster).
                type: string
              storageSize:
                anyOf:
                - type: integer
                - type: string
                default: 10Gi
                description: StorageSize for PVCs used by ingester. Defaults to 10Gi.
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              template:
                description: Template defines requirements for a set of tempo components.
                properties:
                  compactor:
                    description: Compactor defines the tempo compactor component spec.
                    properties:
                      nodeSelector:
                        additionalProperties:
                          type: string
                        description: NodeSelector defines the simple form of the node-selection
                          constraint.
                        type: object
                      replicas:
                        description: Replicas defines the number of replicas to be
                          created for this component.
                        format: int32
                        type: integer
                      resources:
                        description: Resources defines resources for this component,
                          this will override the calculated resources derived from
                          total
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.


                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.


                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      tolerations:
                        description: Tolerations defines component-specific pod tolerations.
                        items:
                          description: |-
                            The pod this Toleration is attached to tolerates any taint that matches
                            the triple <key,value,effect> using the matching operator <operator>.
                          properties:
                            effect:
                              description: |-
                                Effect indicates the taint effect to match. Empty means match all taint effects.
                                When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                              type: string
                            key:
                              description: |-
                                Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                              type: string
                            operator:
                              description: |-
                                Operator represents a key's relationship to the value.
                                Valid operators are Exists and Equal. Defaults to Equal.
                                Exists is equivalent to wildcard for value, so that a pod can
                                tolerate all taints of a particular category.
                              type: string
                            tolerationSeconds:
                              description: |-
                                TolerationSeconds represents the period of time the toleration (which must be
                                of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                it is not set, which means tolerate the taint forever (do not evict). Zero and
                                negative values will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: |-
                                Value is the taint value the toleration matches to.
                                If the operator is Exists, the value should be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  distributor:
                    description: Distributor defines the distributor component spec.
                    properties:
                      component:
                        description: |-
                          TempoComponentSpec is embedded to extend this definition with further options.


                          Currently, there is no way to inline this field.
                          See: https://github.com/golang/go/issues/6213
                        properties:
                          nodeSelector:
                            additionalProperties:
                              type: string
                            description: NodeSelector defines the simple form of the
                              node-selection constraint.
                            type: object
                          replicas:
                            description: Replicas defines the number of replicas to
                              be created for this component.
                            format: int32
                            type: integer
                          resources:
                            description: Resources defines resources for this component,
                              this will override the calculated resources derived
                              from total
                            properties:
                              claims:
                                description: |-
                                  Claims lists the names of resources, defined in spec.resourceClaims,
                                  that are used by this container.


                                  This is an alpha field and requires enabling the
                                  DynamicResourceAllocation feature gate.


                                  This field is immutable. It can only be set for containers.
                                items:
                                  description: ResourceClaim references one entry
                                    in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: |-
                                        Name must match the name of one entry in pod.spec.resourceClaims of
                                        the Pod where this field is used. It makes that resource available
                                        inside a container.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                          tolerations:
                            description: Tolerations defines component-specific pod
                              tolerations.
                            items:
                              description: |-
                                The pod this Toleration is attached to tolerates any taint that matches
                                the triple <key,value,effect> using the matching operator <operator>.
                              properties:
                                effect:
                                  description: |-
                                    Effect indicates the taint effect to match. Empty means match all taint effects.
                                    When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                  type: string
                                key:
                                  description: |-
                                    Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                  type: string
                                operator:
                                  description: |-
                                    Operator represents a key's relationship to the value.
                                    Valid operators are Exists and Equal. Defaults to Equal.
                                    Exists is equivalent to wildcard for value, so that a pod can
                                    tolerate all taints of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: |-
                                    TolerationSeconds represents the period of time the toleration (which must be
                                    of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                    it is not set, which means tolerate the taint forever (do not evict). Zero and
                                    negative values will be treated as 0 (evict immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: |-
                                    Value is the taint value the toleration matches to.
                                    If the operator is Exists, the value should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      tls:
                        description: |-
                          TLS defines TLS configuration for distributor receivers


                          If openshift feature flag `servingCertsService` is enabled and TLS is enabled but no
                          certName or caName is specified, OpenShift service serving certificates will  be used.
                        properties:
                          caName:
                            description: |-
                              CA is the name of a ConfigMap containing a CA certificate (service-ca.crt).
                              It needs to be in the same namespace as the Tempo custom resource.
                            type: string
                          certName:
                            description: |-
                              Cert is the name of a Secret containing a certificate (tls.crt) and private key (tls.key).
                              It needs to be in the same namespace as the Tempo custom resource.
                            type: string
                          enabled:
                            description: Enabled defines if TLS is enabled.
                            type: boolean
                          minVersion:
                            description: MinVersion defines the minimum acceptable
                              TLS version.
                            type: string
                        type: object
                    type: object
                  gateway:
                    description: Gateway defines the tempo gateway spec.
                    properties:
                      component:
                        description: |-
                          TempoComponentSpec is embedded to extend this definition with further options.


                          Currently there is no way to inline this field.
                          See: https://github.com/golang/go/issues/6213
                        properties:
                          nodeSelector:
                            additionalProperties:
                              type: string
                            description: NodeSelector defines the simple form of the
                              node-selection constraint.
                            type: object
                          replicas:
                            description: Replicas defines the number of replicas to
                              be created for this component.
                            format: int32
                            type: integer
                          resources:
                            description: Resources defines resources for this component,
                              this will override the calculated resources derived
                              from total
                            properties:
                              claims:
                                description: |-
                                  Claims lists the names of resources, defined in spec.resourceClaims,
                                  that are used by this container.


                                  This is an alpha field and requires enabling the
                                  DynamicResourceAllocation feature gate.


                                  This field is immutable. It can only be set for containers.
                                items:
                                  description: ResourceClaim references one entry
                                    in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: |-
                                        Name must match the name of one entry in pod.spec.resourceClaims of
                                        the Pod where this field is used. It makes that resource available
                                        inside a container.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                          tolerations:
                            description: Tolerations defines component-specific pod
                              tolerations.
                            items:
                              description: |-
                                The pod this Toleration is attached to tolerates any taint that matches
                                the triple <key,value,effect> using the matching operator <operator>.
                              properties:
                                effect:
                                  description: |-
                                    Effect indicates the taint effect to match. Empty means match all taint effects.
                                    When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                  type: string
                                key:
                                  description: |-
                                    Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                  type: string
                                operator:
                                  description: |-
                                    Operator represents a key's relationship to the value.
                                    Valid operators are Exists and Equal. Defaults to Equal.
                                    Exists is equivalent to wildcard for value, so that a pod can
                                    tolerate all taints of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: |-
                                    TolerationSeconds represents the period of time the toleration (which must be
                                    of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                    it is not set, which means tolerate the taint forever (do not evict). Zero and
                                    negative values will be treated as 0 (evict immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: |-
                                    Value is the taint value the toleration matches to.
                                    If the operator is Exists, the value should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      enabled:
                        type: boolean
                      ingress:
                        description: Ingress defines gateway Ingress options.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations defines the annotations of the
                              Ingress object.
                            type: object
                          host:
                            description: Host defines the hostname of the Ingress
                              object.
                            type: string
                          ingressClassName:
                            description: |-
                              IngressClassName defines the name of an IngressClass cluster resource.
                              Defines which ingress controller serves this ingress resource.
                            type: string
                          route:
                            description: Route defines the options for the OpenShift
                              route.
                            properties:
                              termination:
                                description: |-
                                  Termination defines the termination type.
                                  The default is "edge".
                                enum:
                                - insecure
                                - edge
                                - passthrough
                                - reencrypt
                                type: string
                            type: object
                          type:
                            description: |-
                              Type defines the type of Ingress for the Jaeger Query UI.
                              Currently ingress, route and none are supported.
                            enum:
                            - ingress
                            - route
                            type: string
                        type: object
                    required:
                    - enabled
                    type: object
                  ingester:
                    description: Ingester defines the ingester component spec.
                    properties:
                      nodeSelector:
                        additionalProperties:
                          type: string
                        description: NodeSelector defines the simple form of the node-selection
                          constraint.
                        type: object
                      replicas:
                        description: Replicas defines the number of replicas to be
                          created for this component.
                        format: int32
                        type: integer
                      resources:
                        description: Resources defines resources for this component,
                          this will override the calculated resources derived from
                          total
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.


                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.


                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      tolerations:
                        description: Tolerations defines component-specific pod tolerations.
                        items:
                          description: |-
                            The pod this Toleration is attached to tolerates any taint that matches
                            the triple <key,value,effect> using the matching operator <operator>.
                          properties:
                            effect:
                              description: |-
                                Effect indicates the taint effect to match. Empty means match all taint effects.
                                When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                              type: string
                            key:
                              description: |-
                                Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                              type: string
                            operator:
                              description: |-
                                Operator represents a key's relationship to the value.
                                Valid operators are Exists and Equal. Defaults to Equal.
                                Exists is equivalent to wildcard for value, so that a pod can
                                tolerate all taints of a particular category.
                              type: string
                            tolerationSeconds:
                              description: |-
                                TolerationSeconds represents the period of time the toleration (which must be
                                of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                it is not set, which means tolerate the taint forever (do not evict). Zero and
                                negative values will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: |-
                                Value is the taint value the toleration matches to.
                                If the operator is Exists, the value should be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  querier:
                    description: Querier defines the querier component spec.
                    properties:
                      nodeSelector:
                        additionalProperties:
                          type: string
                        description: NodeSelector defines the simple form of the node-selection
                          constraint.
                        type: object
                      replicas:
                        description: Replicas defines the number of replicas to be
                          created for this component.
                        format: int32
                        type: integer
                      resources:
                        description: Resources defines resources for this component,
                          this will override the calculated resources derived from
                          total
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.


                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.


                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      tolerations:
                        description: Tolerations defines component-specific pod tolerations.
                        items:
                          description: |-
                            The pod this Toleration is attached to tolerates any taint that matches
                            the triple <key,value,effect> using the matching operator <operator>.
                          properties:
                            effect:
                              description: |-
                                Effect indicates the taint effect to match. Empty means match all taint effects.
                                When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                              type: string
                            key:
                              description: |-
                                Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                              type: string
                            operator:
                              description: |-
                                Operator represents a key's relationship to the value.
                                Valid operators are Exists and Equal. Defaults to Equal.
                                Exists is equivalent to wildcard for value, so that a pod can
                                tolerate all taints of a particular category.
                              type: string
                            tolerationSeconds:
                              description: |-
                                TolerationSeconds represents the period of time the toleration (which must be
                                of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                it is not set, which means tolerate the taint forever (do not evict). Zero and
                                negative values will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: |-
                                Value is the taint value the toleration matches to.
                                If the operator is Exists, the value should be empty, otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  queryFrontend:
                    description: TempoQueryFrontendSpec defines the query frontend
                      spec.
                    properties:
                      component:
                        description: |-
                          TempoComponentSpec is embedded to extend this definition with further options.


                          Currently there is no way to inline this field.
                          See: https://github.com/golang/go/issues/6213
                        properties:
                          nodeSelector:
                            additionalProperties:
                              type: string
                            description: NodeSelector defines the simple form of the
                              node-selection constraint.
                            type: object
                          replicas:
                            description: Replicas defines the number of replicas to
                              be created for this component.
                            format: int32
                            type: integer
                          resources:
                            description: Resources defines resources for this component,
                              this will override the calculated resources derived
                              from total
                            properties:
                              claims:
                                description: |-
                                  Claims lists the names of resources, defined in spec.resourceClaims,
                                  that are used by this container.


                                  This is an alpha field and requires enabling the
                                  DynamicResourceAllocation feature gate.


                                  This field is immutable. It can only be set for containers.
                                items:
                                  description: ResourceClaim references one entry
                                    in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: |-
                                        Name must match the name of one entry in pod.spec.resourceClaims of
                                        the Pod where this field is used. It makes that resource available
                                        inside a container.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                          tolerations:
                            description: Tolerations defines component-specific pod
                              tolerations.
                            items:
                              description: |-
                                The pod this Toleration is attached to tolerates any taint that matches
                                the triple <key,value,effect> using the matching operator <operator>.
                              properties:
                                effect:
                                  description: |-
                                    Effect indicates the taint effect to match. Empty means match all taint effects.
                                    When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                  type: string
                                key:
                                  description: |-
                                    Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                    If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                  type: string
                                operator:
                                  description: |-
                                    Operator represents a key's relationship to the value.
                                    Valid operators are Exists and Equal. Defaults to Equal.
                                    Exists is equivalent to wildcard for value, so that a pod can
                                    tolerate all taints of a particular category.
                                  type: string
                                tolerationSeconds:
                                  description: |-
                                    TolerationSeconds represents the period of time the toleration (which must be
                                    of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                    it is not set, which means tolerate the taint forever (do not evict). Zero and
                                    negative values will be treated as 0 (evict immediately) by the system.
                                  format: int64
                                  type: integer
                                value:
                                  description: |-
                                    Value is the taint value the toleration matches to.
                                    If the operator is Exists, the value should be empty, otherwise just a regular string.
                                  type: string
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      jaegerQuery:
                        description: JaegerQuery defines options specific to the Jaeger
                          Query component.
                        properties:
                          authentication:
                            description: Authentication defines the options for the
                              oauth proxy used to protect jaeger UI
                            properties:
                              enabled:
                                description: Defines if the authentication will be
                                  enabled for jaeger UI.
                                type: boolean
                              resources:
                                description: |-
                                  Resources defines the compute resource requirements of the OAuth Proxy container.
                                  The OAuth Proxy performs authentication and authorization of incoming requests to Jaeger UI when multi-tenancy is disabled.
                                properties:
                                  claims:
                                    description: |-
                                      Claims lists the names of resources, defined in spec.resourceClaims,
                                      that are used by this container.


                                      This is an alpha field and requires enabling the
                                      DynamicResourceAllocation feature gate.


                                      This field is immutable. It can only be set for containers.
                                    items:
                                      description: ResourceClaim references one entry
                                        in PodSpec.ResourceClaims.
                                      properties:
                                        name:
                                          description: |-
                                            Name must match the name of one entry in pod.spec.resourceClaims of
                                            the Pod where this field is used. It makes that resource available
                                            inside a container.
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: |-
                                      Limits describes the maximum amount of compute resources allowed.
                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: |-
                                      Requests describes the minimum amount of compute resources required.
                                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                    type: object
                                type: object
                              sar:
                                description: |-
                                  SAR defines the SAR to be used in the oauth-proxy
                                  default is "{"namespace": "<tempo_stack_namespace>", "resource": "pods", "verb": "get"}
                                type: string
                            type: object
                          enabled:
                            description: Enabled defines if the Jaeger Query component
                              should be created.
                            type: boolean
                          ingress:
                            description: Ingress defines the options for the Jaeger
                              Query ingress.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations defines the annotations of
                                  the Ingress object.
                                type: object
                              host:
                                description: Host defines the hostname of the Ingress
                                  object.
                                type: string
                              ingressClassName:
                                description: |-
                                  IngressClassName defines the name of an IngressClass cluster resource.
                                  Defines which ingress controller serves this ingress resource.
                                type: string
                              route:
                                description: Route defines the options for the OpenShift
                                  route.
                                properties:
                                  termination:
                                    description: |-
                                      Termination defines the termination type.
                                      The default is "edge".
                                    enum:
                                    - insecure
                                    - edge
                                    - passthrough
                                    - reencrypt
                                    type: string
                                type: object
                              type:
                                description: |-
                                  Type defines the type of Ingress for the Jaeger Query UI.
                                  Currently ingress, route and none are supported.
                                enum:
                                - ingress
                                - route
                                type: string
                            type: object
                          monitorTab:
                            description: MonitorTab defines the monitor tab configuration.
                            properties:
                              enabled:
                                description: |-
                                  Enabled enables the monitor tab in the Jaeger console.
                                  The PrometheusEndpoint must be configured to enable this feature.
                                type: boolean
                              prometheusEndpoint:
                                description: |-
                                  PrometheusEndpoint defines the endpoint to the Prometheus instance that contains the span rate, error, and duration (RED) metrics.
                                  For instance on OpenShift this is set to https://thanos-querier.openshift-monitoring.svc.cluster.local:9091
                                type: string
                            type: object
                          resources:
                            description: Resources defines resources for this component,
                              this will override the calculated resources derived
                              from total
                            properties:
                              claims:
                                description: |-
                                  Claims lists the names of resources, defined in spec.resourceClaims,
                                  that are used by this container.


                                  This is an alpha field and requires enabling the
                                  DynamicResourceAllocation feature gate.


                                  This field is immutable. It can only be set for containers.
                                items:
                                  description: ResourceClaim references one entry
                                    in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: |-
                                        Name must match the name of one entry in pod.spec.resourceClaims of
                                        the Pod where this field is used. It makes that resource available
                                        inside a container.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                          servicesQueryDuration:
                            description: ServicesQueryDuration defines how long the
                              services will be available in the services list
                            type: string
                        type: object
                    type: object
                type: object
              tenants:
                description: Tenants defines the per-tenant authentication and authorization
                  spec.
                properties:
                  authentication:
                    description: Authentication defines the tempo-gateway component
                      authentication configuration spec per tenant.
                    items:
                      description: AuthenticationSpec defines the oidc configuration
                        per tenant for tempo Gateway component.
                      properties:
                        oidc:
                          description: OIDC defines the spec for the OIDC tenant's
                            authentication.
                          properties:
                            groupClaim:
                              description: Group claim field from ID Token
                              type: string
                            issuerURL:
                              description: IssuerURL defines the URL for issuer.
                              type: string
                            redirectURL:
                              description: RedirectURL defines the URL for redirect.
                              type: string
                            secret:
                              description: Secret defines the spec for the clientID,
                                clientSecret and issuerCAPath for tenant's authentication.
                              properties:
                                name:
                                  description: Name of a secret in the namespace configured
                                    for tenant secrets.
                                  type: string
                              type: object
                            usernameClaim:
                              description: User claim field from ID Token
                              type: string
                          type: object
                        tenantId:
                          description: |-
                            TenantID defines a universally unique identifier of the tenant.
                            Unlike the tenantName, which must be unique at a given time, the tenantId must be unique over the entire lifetime of the Tempo deployment.
                            Tempo uses this ID to prefix objects in the object storage.
                          type: string
                        tenantName:
                          description: |-
                            TenantName defines a human readable, unique name of the tenant.
                            The value of this field must be specified in the X-Scope-OrgID header and in the resources field of a ClusterRole to identify the tenant.
                          type: string
                      required:
                      - tenantId
                      - tenantName
                      type: object
                    type: array
                  authorization:
                    description: Authorization defines the tempo-gateway component
                      authorization configuration spec per tenant.
                    properties:
                      roleBindings:
                        description: RoleBindings defines configuration to bind a
                          set of roles to a set of subjects.
                        items:
                          description: RoleBindingsSpec binds a set of roles to a
                            set of subjects.
                          properties:
                            name:
                              type: string
                            roles:
                              items:
                                type: string
                              type: array
                            subjects:
                              items:
                                description: Subject represents a subject that has
                                  been bound to a role.
                                properties:
                                  kind:
                                    description: SubjectKind is a kind of Tempo Gateway
                                      RBAC subject.
                                    enum:
                                    - user
                                    - group
                                    type: string
                                  name:
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              type: array
                          required:
                          - name
                          - roles
                          - subjects
                          type: object
                        type: array
                      roles:
                        description: Roles defines a set of permissions to interact
                          with a tenant.
                        items:
                          description: RoleSpec describes a set of permissions to
                            interact with a tenant.
                          properties:
                            name:
                              type: string
                            permissions:
                              items:
                                description: PermissionType is a Tempo Gateway RBAC
                                  permission.
                                enum:
                                - read
                                - write
                                type: string
                              type: array
                            resources:
                              items:
                                type: string
                              type: array
                            tenants:
                              items:
                                type: string
                              type: array
                          required:
                          - name
                          - permissions
                          - resources
                          - tenants
                          type: object
                        type: array
                    type: object
                  mode:
                    default: static
                    description: Mode defines the multitenancy mode.
                    enum:
                    - static
                    - openshift
                    type: string
                required:
                - mode
                type: object
            required:
            - storage
            type: object
          status:
            description: TempoStackStatus defines the observed state of TempoStack.
            properties:
              components:
                description: |-
                  Components provides summary of all Tempo pod status grouped
                  per component.
                properties:
                  compactor:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Compactor is a map to the pod status of the compactor
                      pod.
                    type: object
                  distributor:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Distributor is a map to the per pod status of the
                      distributor deployment
                    type: object
                  gateway:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Gateway is a map to the per pod status of the query
                      frontend deployment
                    type: object
                  ingester:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Ingester is a map to the per pod status of the ingester
                      statefulset
                    type: object
                  querier:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: Querier is a map to the per pod status of the querier
                      deployment
                    type: object
                  queryFrontend:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: QueryFrontend is a map to the per pod status of the
                      query frontend deployment
                    type: object
                type: object
              conditions:
                description: Conditions of the Tempo deployment health.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              operatorVersion:
                description: Version of the Tempo Operator.
                type: string
              tempoQueryVersion:
                description: DEPRECATED. Version of the Tempo Query component used.
                type: string
              tempoVersion:
                description: Version of the managed Tempo instance.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
  name: tempo-operator-controller-manager
  namespace: tempo-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
  name: tempo-operator-leader-election-role
  namespace: tempo-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
  name: tempo-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - config.openshift.io
  resources:
  - dnses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - list
  - watch
- apiGroups:
  - grafana.integreatly.org
  resources:
  - grafanadatasources
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - prometheusrules
  - servicemonitors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - operator.openshift.io
  resources:
  - ingresscontrollers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  - routes/custom-host
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - tempo.grafana.com
  resources:
  - tempomonolithics
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tempo.grafana.com
  resources:
  - tempomonolithics/finalizers
  verbs:
  - update
- apiGroups:
  - tempo.grafana.com
  resources:
  - tempomonolithics/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tempo.grafana.com
  resources:
  - tempostacks
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tempo.grafana.com
  resources:
  - tempostacks/finalizers
  verbs:
  - update
- apiGroups:
  - tempo.grafana.com
  resources:
  - tempostacks/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
  name: tempo-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
  name: tempo-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
  name: tempo-operator-leader-election-rolebinding
  namespace: tempo-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tempo-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: tempo-operator-controller-manager
  namespace: tempo-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
  name: tempo-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tempo-operator-manager-role
subjects:
- kind: ServiceAccount
  name: tempo-operator-controller-manager
  namespace: tempo-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
  name: tempo-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tempo-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: tempo-operator-controller-manager
  namespace: tempo-operator-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: config.tempo.grafana.com/v1alpha1
    kind: ProjectConfig
    distribution: community
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 8b886b0f.grafana.com
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
    featureGates:
      openshift:
        openshiftRoute: false
        servingCertsService: false
        oAuthProxy:
          defaultEnabled: false
      prometheusOperator: false
      grafanaOperator: false
      httpEncryption: true
      grpcEncryption: true
      tlsProfile: Modern
      builtInCertManagement:
        enabled: true
        # CA certificate validity: 5 years
        caValidity: 43830h
        # CA certificate refresh at 80% of validity
        caRefresh: 35064h
        # Target certificate validity: 90d
        certValidity: 2160h
        # Target certificate refresh at 80% of validity
        certRefresh: 1728h
      observability:
        metrics:
          createServiceMonitors: false
          createPrometheusRules: false
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
  name: tempo-operator-manager-config
  namespace: tempo-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
    control-plane: controller-manager
  name: tempo-operator-controller-manager-metrics-service
  namespace: tempo-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
  name: tempo-operator-webhook-service
  namespace: tempo-operator-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
    control-plane: controller-manager
  name: tempo-operator-controller
  namespace: tempo-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: operator-lifecycle-manager
      app.kubernetes.io/name: tempo-operator
      app.kubernetes.io/part-of: tempo-operator
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/managed-by: operator-lifecycle-manager
        app.kubernetes.io/name: tempo-operator
        app.kubernetes.io/part-of: tempo-operator
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --zap-log-level=info
        - start
        - --config=controller_manager_config.yaml
        env:
        - name: RELATED_IMAGE_TEMPO
          value: docker.io/grafana/tempo:2.5.0
        - name: RELATED_IMAGE_TEMPO_QUERY
          value: docker.io/grafana/tempo-query:2.5.0
        - name: RELATED_IMAGE_TEMPO_GATEWAY
          value: quay.io/observatorium/api:main-2024-08-05-11d0d94
        - name: RELATED_IMAGE_TEMPO_GATEWAY_OPA
          value: quay.io/observatorium/opa-openshift:main-2024-04-29-914c13f
        - name: RELATED_IMAGE_OAUTH_PROXY
          value: quay.io/openshift/origin-oauth-proxy:4.12
        image: ghcr.io/grafana/tempo-operator/tempo-operator:v0.13.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /controller_manager_config.yaml
          name: manager-config
          subPath: controller_manager_config.yaml
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: tempo-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - configMap:
          name: tempo-operator-manager-config
        name: manager-config
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
  name: tempo-operator-serving-cert
  namespace: tempo-operator-system
spec:
  dnsNames:
  - tempo-operator-webhook-service.tempo-operator-system.svc
  - tempo-operator-webhook-service.tempo-operator-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: tempo-operator-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
  name: tempo-operator-selfsigned-issuer
  namespace: tempo-operator-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: tempo-operator-system/tempo-operator-serving-cert
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
  name: tempo-operator-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: tempo-operator-webhook-service
      namespace: tempo-operator-system
      path: /mutate-tempo-grafana-com-v1alpha1-tempostack
  failurePolicy: Fail
  name: mtempostack.tempo.grafana.com
  rules:
  - apiGroups:
    - tempo.grafana.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - tempostacks
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: tempo-operator-system/tempo-operator-serving-cert
  labels:
    app.kubernetes.io/managed-by: operator-lifecycle-manager
    app.kubernetes.io/name: tempo-operator
    app.kubernetes.io/part-of: tempo-operator
  name: tempo-operator-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: tempo-operator-webhook-service
      namespace: tempo-operator-system
      path: /validate-tempo-grafana-com-v1alpha1-tempomonolithic
  failurePolicy: Fail
  name: vtempomonolithic.kb.io
  rules:
  - apiGroups:
    - tempo.grafana.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - tempomonolithics
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: tempo-operator-webhook-service
      namespace: tempo-operator-system
      path: /validate-tempo-grafana-com-v1alpha1-tempostack
  failurePolicy: Fail
  name: vtempostack.tempo.grafana.com
  rules:
  - apiGroups:
    - tempo.grafana.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - tempostacks
  sideEffects: None
