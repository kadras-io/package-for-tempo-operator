#@data/values-schema
---

#@schema/desc "Settings for the Tempo Operator controller."
controller:
  #@schema/desc "The number of replicas for this Deployment. In order to enable high availability, it should be greater than 1."
  #@schema/validation min=1
  replicas: 1

#@schema/desc "The YAML contents of the `tempo-operator-manager-config` ConfigMap. See https://github.com/grafana/tempo-operator/blob/main/docs/operator/config.yaml for more information."
#@schema/type any=True
configMapData: {}

#@schema/desc "Settings for Tempo."
tempo:
  
  #@schema/desc "Namespace where to provision a Tempo installation, stack or monolithic."
  namespace: default
  
  #@schema/desc "Additional configuration for Tempo that will be merged with the one generated by the Operator. It has higher precedence than the Operator."
  #@schema/type any=True
  extraConfig: {}

  #@schema/desc "Settings for Jaeger UI."
  jaegerui:
    #@schema/desc "Whether to enable the Jaeger UI to visualize traces."
    enabled: false
  
  #@schema/desc "Settings for observability."
  observability:
    grafana:
      #@schema/desc "Whether a Datasource managed by Grafana Operator should be created for Tempo."
      createDatasource: false
    metrics:
      #@schema/desc "Whether PrometheusRules for alerts managed by Prometheus Operator should be created for Tempo."
      createPrometheusRules: false
      #@schema/desc "Whether ServiceMonitors managed by Prometheus Operator should be created for Tempo."
      createServiceMonitors: false
    tracing:
      #@schema/desc "The Jaeger endpoint where to send traces. Only for TempoStack."
      jaegerEndpoint: ""
      #@schema/desc "Sampling frequence for Tempo traces. Only for TempoStack."
      samplingFraction: ""
  
  #@schema/desc "Settings for storage."
  storage:
    #@schema/desc "Tracing backend object storage configuration."
    backend:
      #@schema/desc "Type of object storage that should be used. Valid options: `azure`, `gcs`, `s3`, `memory` (only for TempoMonolithic)."
      #@schema/validation one_of=["azure", "gcs", "s3", "memory"]
      type: memory
      secret:
        #@schema/desc "Name of the Secret containing the credentials to access the configured object storage."
        #@schema/validation min_len=1, when=lambda _, ctx: ctx.root["tempo"]["storage"]["backend"]["type"] != "memory"
        name: ""
        #@schema/desc "Namespace containing the Secret with the credentials to access the configured object storage."
        namespace: kadras-system
    #@schema/desc "The size of the storage used by Tempo."
    size: "10Gi"
  
  #@schema/desc "Settings for total resources."
  resources:
    limits: 
      cpu: 750m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi

  #@schema/desc "Settings for the built-in TempoStack instance."
  tempoStack:
    #@schema/desc "Whether to deploy the built-in TempoStack instance."
    enabled: false

    #@schema/desc "Number of replicas to deploy for each Tempo component."
    replicationFactor: 1

    #@schema/desc "Settings for the Tempo Gateway."
    gateway:
      #@schema/desc "Whether to enable the Tempo Gateway."
      enabled: false
      #@schema/desc "Ingress for the Tempo Gateway."
      ingress:
        #@schema/desc "The annotations for the Ingress object."
        annotations: {}
        #@schema/desc "The hostname of the Ingress object."
        host: ""
        #@schema/desc "The class of the Ingress Controller to use for the Tempo Gateway."
        ingressClassName: contour
        #@schema/desc "Type of Ingress for the Tempo Gateway. Valid options: `ingress`, `route`."
        #@schema/validation one_of=["ingress", "route"]
        #@schema/nullable
        type: ""

  #@schema/desc "Settings for the built-in TempoMonolithic instance."
  tempoMonolithic:
    #@schema/desc "Whether to deploy the built-in TempoMonolithic instance."
    enabled: false
